<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.test.mvc.IUserDAO">
		
	<!-- 로그인 -->
	<select id="login" resultType="com.test.mvc.UserDTO" parameterType="java.lang.String">      
	     SELECT USER_DSTN_CD, USER_NAME
	     FROM USER_INFO
	     WHERE USER_ID = #{user_id}
	       AND (SELECT USER_PW
	             FROM USER_INFO
	             WHERE USER_ID = #{user_id}) = CRYPTPACK.ENCRYPT(#{user_pw}, '123456')
	</select>
   
 	
	<!-- 아이디찾기 -->
	<select id="findId" resultType="com.test.mvc.UserDTO">
		SELECT USER_ID
		FROM USER_INFO
		WHERE USER_NAME = #{user_name}
		  AND USER_TEL = #{user_tel}
	</select>
	

	<!-- 회원등록 -->	
	<insert id="add" statementType="CALLABLE">
		call PRC_USER_INSERT(#{user_id}, #{user_name}, #{user_pw}, #{user_tel}
						   , #{ssn}, #{mrg_cd}, #{child_cd}, #{fml_cd}, #{pet_cd}
						   , #{car_cd}, #{house_cd}, #{area_sec_cd}, #{job_sec_cd})
	</insert>
	
	
	<!-- 해당월 수입 총액 -->
	<select id="monthInTot" resultType="java.lang.Integer" parameterType="com.test.mvc.UserDTO">
		SELECT NVL(SUM(A.AMNT),0)
		FROM ACNT A JOIN CATE_SEC CS
		  ON A.CATE_SEC_CD = CS.CATE_SEC_CD
		     JOIN CATE_FST CF
		       ON CS.CATE_FST_CD = CF.CATE_FST_CD
		WHERE A.USER_DSTN_CD=#{user_dstn_cd}
		  AND FN_YEAR(ACNT_DATE)='2022' AND FN_MON(ACNT_DATE)='5'
		  AND CF.INOUT_CD=1
	</select>
	
	<!-- 해당월 지출 총액 -->
	<select id="monthOutTot" resultType="java.lang.Integer" parameterType="com.test.mvc.UserDTO">
		SELECT SUM(A.AMNT)
		FROM ACNT A JOIN CATE_SEC CS
		  ON A.CATE_SEC_CD = CS.CATE_SEC_CD
		     JOIN CATE_FST CF
		       ON CS.CATE_FST_CD = CF.CATE_FST_CD
		WHERE USER_DSTN_CD=#{user_dstn_cd}
		  AND FN_YEAR(ACNT_DATE)='2022' AND FN_MON(ACNT_DATE)='5'
		  AND CF.INOUT_CD=2
	</select>
	
	<!-- 해당월 잔액 -->
	<select id="nowRemain" resultType="java.lang.Integer" parameterType="com.test.mvc.UserDTO">
		SELECT ( SELECT SUM(AMNT)
		         FROM ACNT_INOUT_VIEW
		         WHERE USER_DSTN_CD=#{user_dstn_cd} AND INOUT_CD=1) 
		     - ( SELECT SUM(AMNT)
		         FROM ACNT_INOUT_VIEW
		         WHERE USER_DSTN_CD=#{user_dstn_cd} AND INOUT_CD=2)
		FROM DUAL
	</select>
	
	<!-- 
	당일 수입 총액
	<select id="dayInTot" resultType="java.lang.Integer">
		SELECT SUM(AIV.AMNT)
		FROM ACNT_INOUT_VIEW AIV LEFT JOIN USER_INFO UI
		  ON AIV.USER_DSTN_CD = UI.USER_DSTN_CD
		WHERE UI.USER_DSTN_CD = 1001 AND AIV.INOUT_CD = 1
		  AND AIV.ACNT_DATE = TO_DATE('2022'||FN_TWONUM(5)||FN_TWONUM(8))
	</select>
	
	당일 지출 총액
	<select id="dayOutTot" resultType="java.lang.Integer">
		SELECT SUM(AIV.AMNT)
		FROM ACNT_INOUT_VIEW AIV LEFT JOIN USER_INFO UI
		  ON AIV.USER_DSTN_CD = UI.USER_DSTN_CD
		WHERE UI.USER_DSTN_CD = 1001 AND AIV.INOUT_CD = 2
		  AND AIV.ACNT_DATE = TO_DATE('2022'||FN_TWONUM(5)||FN_TWONUM(8))
	</select>
	-->
	
	<!-- 해당월 수입 리스트 출력 -->
	<select id="monthInList" resultType="com.test.mvc.UserDTO" parameterType="com.test.mvc.UserDTO">
		SELECT AIV.USER_DSTN_CD AS USER_DSTN_CD
		     , AIV.ACNT_DATE AS ACNT_DATE
		     , CF.CATE_FST_NAME AS CATE_FST_NAME
		     , CS.CATE_SEC_NAME AS CATE_SEC_NAME
		     , AIV.INOUT_CD AS INOUT_CD
		     , AIV.ACNT_DTL_CONT AS ACNT_DTL_CONT
		     , AIV.AMNT AS AMNT
		FROM ACNT_INOUT_VIEW AIV LEFT JOIN CATE_SEC CS
		  ON AIV.CATE_SEC_CD = CS.CATE_SEC_CD
		     LEFT JOIN CATE_FST CF
		       ON CS.CATE_FST_CD = CF.CATE_FST_CD
		WHERE AIV.USER_DSTN_CD = #{user_dstn_cd}
		  AND FN_YEAR(AIV.ACNT_DATE)='2022' AND FN_MON(AIV.ACNT_DATE)='5'
		  AND AIV.INOUT_CD = 1
		ORDER BY ACNT_DATE
	</select>
	
	
	<!-- 해당월 지출 리스트 출력 -->
	<select id="monthOutList" resultType="com.test.mvc.UserDTO" parameterType="com.test.mvc.UserDTO">
		SELECT AIV.USER_DSTN_CD AS USER_DSTN_CD
		     , AIV.ACNT_DATE AS ACNT_DATE
		     , CF.CATE_FST_NAME AS CATE_FST_NAME
		     , CS.CATE_SEC_NAME AS CATE_SEC_NAME
		     , AIV.INOUT_CD AS INOUT_CD
		     , AIV.ACNT_DTL_CONT AS ACNT_DTL_CONT
		     , AIV.AMNT AS AMNT
		FROM ACNT_INOUT_VIEW AIV LEFT JOIN CATE_SEC CS
		  ON AIV.CATE_SEC_CD = CS.CATE_SEC_CD
		     LEFT JOIN CATE_FST CF
		       ON CS.CATE_FST_CD = CF.CATE_FST_CD
		WHERE AIV.USER_DSTN_CD = #{user_dstn_cd}
		  AND FN_YEAR(AIV.ACNT_DATE)='2022' AND FN_MON(AIV.ACNT_DATE)='5'
		  AND AIV.INOUT_CD = 2
		ORDER BY ACNT_DATE
	</select>
	
	
	<!-- 당일 가계부 리스트 출력 -->
	<select id="dayInoutList" resultType="com.test.mvc.UserDTO" parameterType="com.test.mvc.UserDTO">
		SELECT AIV.USER_DSTN_CD
		     , I.INOUT_CONT
		     , AIV.ACNT_DATE
		     , CF.CATE_FST_NAME
		     , CS.CATE_SEC_NAME
		     , AIV.ACNT_DTL_CONT
		     , AIV.AMNT
		FROM ACNT_INOUT_VIEW AIV LEFT JOIN CATE_SEC CS
				  ON AIV.CATE_SEC_CD = CS.CATE_SEC_CD
				     LEFT JOIN CATE_FST CF
				       ON CS.CATE_FST_CD = CF.CATE_FST_CD
		                  LEFT JOIN INOUT I
		                    ON CF.INOUT_CD = I.INOUT_CD
		WHERE AIV.USER_DSTN_CD = #{user_dstn_cd} AND AIV.ACNT_DATE = '20220501'
	</select>
	
	
	<!-- 내 전체 수입 평균 출력 -->
	<select id="allInAvg" parameterType="com.test.mvc.UserDTO" resultType="java.lang.Integer" >
		SELECT AVG(NVL(SUM(AMNT), 0))
		FROM ACNT_INOUT_VIEW
		WHERE USER_DSTN_CD=#{user_dstn_cd}
		  AND INOUT_CD = 1
		GROUP BY FN_YEAR(ACNT_DATE)||FN_MON(ACNT_DATE)
	</select>
	
	<!-- 내 전체 지출 평균 출력 -->
	<select id="allOutAvg" parameterType="com.test.mvc.UserDTO" resultType="java.lang.Integer" >
		SELECT AVG(NVL(SUM(AMNT), 0))
		FROM ACNT_INOUT_VIEW
		WHERE USER_DSTN_CD=#{user_dstn_cd}
		  AND INOUT_CD = 2
		GROUP BY FN_YEAR(ACNT_DATE)||FN_MON(ACNT_DATE)
	</select>

	
	<!-- 비슷한 이용자 전체 수입 평균 출력 -->
	<select id="similarInAvg" parameterType="com.test.mvc.UserDTO" resultType="java.lang.Integer" >
		SELECT AVG(AMNT)
		FROM ACNT_INOUT_VIEW AIV JOIN USER_PLUS UP
		  ON AIV.USER_DSTN_CD = UP.USER_DSTN_CD
		     JOIN AREA_SEC AR
		       ON UP.AREA_SEC_CD = AR.AREA_SEC_CD
		          JOIN JOB_SEC JS
		            ON UP.JOB_SEC_CD = JS.JOB_SEC_CD
		WHERE AIV.INOUT_CD=1 AND UP.MRG_CD=1 AND UP.CHILD_CD=1 AND UP.FML_CD=1
		  AND UP.PET_CD=1 AND UP.CAR_CD=1 AND UP.HOUSE_CD=1 
		  AND AR.AREA_FST_CD=1 AND JS.JOB_FST_CD=1
	</select>
	
	<!-- 비슷한 이용자 전체 지출 평균 출력 -->
	<select id="similarOutAvg" parameterType="com.test.mvc.UserDTO" resultType="java.lang.Integer" >
		SELECT AVG(AMNT)
		FROM ACNT_INOUT_VIEW AIV JOIN USER_PLUS UP
		  ON AIV.USER_DSTN_CD = UP.USER_DSTN_CD
		     JOIN AREA_SEC AR
		       ON UP.AREA_SEC_CD = AR.AREA_SEC_CD
		          JOIN JOB_SEC JS
		            ON UP.JOB_SEC_CD = JS.JOB_SEC_CD
		WHERE AIV.INOUT_CD=2 AND UP.MRG_CD=1 AND UP.CHILD_CD=1 AND UP.FML_CD=1
		  AND UP.PET_CD=1 AND UP.CAR_CD=1 AND UP.HOUSE_CD=1 
		  AND AR.AREA_FST_CD=1 AND JS.JOB_FST_CD=1
	</select>
	
	
	<!-- 머니리뷰 기준 - 4달간 카운트 현황 -->
	<select id="pigTotCount" parameterType="com.test.mvc.UserDTO" resultType="java.lang.Integer" >
		SELECT FO_MON_CNT
		FROM ACIV_COUNT_VIEW
		WHERE USER_DSTN_CD=#{user_dstn_cd}
	</select>
	
	<!-- 머니리뷰 기준 - 한달 카운트 현황 -->
	<select id="pigMonthCount" parameterType="com.test.mvc.UserDTO" resultType="java.lang.Integer" >
		SELECT MON_CNT
		FROM ACIV_COUNT_VIEW
		WHERE USER_DSTN_CD=#{user_dstn_cd}
	</select>
	
	<!-- 구분(수입/지출) 출력 -->
	<select id="inoutCateList" resultType="com.test.mvc.UserDTO">
		SELECT INOUT_CD, INOUT_CONT
		FROM INOUT
	</select>
	
	<!-- 1차 카테고리 출력 -->
	<select id="fstCateList" parameterType="String" resultType="com.test.mvc.UserDTO">
		SELECT CATE_FST_CD, CATE_FST_NAME
		FROM CATE_FST
		WHERE INOUT_CD=2
	</select>
	   
	   
	<!-- 내가 쓴 게시글 조회 -->
	<select id="myPostList" resultType="com.test.mvc.UserDTO">
	    SELECT P.POST_CD, P.POST_TITLE, 
      		   (SELECT COUNT(C.CMNT_CD) 
                FROM CMNT C LEFT JOIN CMNT_REPT CR 
                  ON C.CMNT_CD = CR.CMNT_CD
                WHERE CR.CMNT_REPT_CD IS NULL 
                  AND C.POST_CD = P.POST_CD) "COUNT_CMNT"
              , P.POST_DATE, P.POST_VIEW
        FROM POST P 
        LEFT JOIN POST_REPT RP
        ON P.POST_CD = RP.POST_CD
        WHERE RP.POST_REPT_CD IS NULL
          AND P.USER_DSTN_CD = #{user_dstn_cd }
        ORDER BY P.POST_CD DESC
	</select>
	
	
	<!-- 내가 쓴 댓글 조회 -->
	<select id="myCmntList" resultType="com.test.mvc.UserDTO">
		SELECT POST_CD, CMNT_CONT, CMNT_DATE
		FROM CMNT 
		WHERE USER_DSTN_CD = #{user_dstn_cd}
		ORDER BY CMNT_CD DESC
	</select>
	
	<!-- 내가 쓴 문의글 조회 -->
	<select id="myQnaList" resultType="com.test.mvc.UserDTO">
		SELECT QNA_CD, QNA_TITLE, QNA_DATE
		FROM QNA
		WHERE USER_DSTN_CD = #{user_dstn_cd}
		ORDER BY QNA_CD DESC
	</select> 
	
	
	<!-- 비밀번호 확인 -->
	<!-- 여기서 비밀번호 + 이용자 기존정보까지 조회 해서 model 에 add해서 가져감 -->
	<select id="myCheckPw" resultType="com.test.mvc.UserDTO" parameterType="com.test.mvc.UserDTO">
      SELECT CRYPTPACK.DECRYPT(UI.USER_PW, '123456') "USER_PW"
            , UI.USER_TEL, UI.USER_DATE, UP.SSN, UP.MRG_CD
     		, UP.CHILD_CD, UP.FML_CD, UP.PET_CD, UP.CAR_CD, UP.HOUSE_CD
     		, ASE.AREA_FST_CD, UP.AREA_SEC_CD, JS.JOB_FST_CD, UP.JOB_SEC_CD
	  FROM USER_PLUS UP
	  LEFT JOIN USER_INFO UI
	  ON UP.USER_DSTN_CD = UI.USER_DSTN_CD
	  LEFT JOIN AREA_SEC ASE
	  ON UP.AREA_SEC_CD = ASE.AREA_SEC_CD
	  LEFT JOIN JOB_SEC JS
	  ON UP.JOB_SEC_CD = JS.JOB_SEC_CD
	  WHERE UI.USER_DSTN_CD = #{user_dstn_cd}	 
   </select>
   
   
   <!--  내 정보에서 전화번호 수정쿼리  -> 안씀 전화번호 본인이 수정 불가 -->
   <update id="telModify">
     UPDATE USER_INFO
     SET USER_TEL = #{user_tel}
     WHERE USER_DSTN_CD = #{user_dstn_cd}
   </update>
   
   
   <!-- 활용정보 수정시 기존에 있던 값 조회 쿼리  -->
   <select id="myPlusInfo" resultType="com.test.mvc.UserDTO" parameterType="com.test.mvc.UserDTO">
       SELECT CRYPTPACK.DECRYPT(UI.USER_PW, '123456') "USER_PW", UP.USER_DSTN_CD, UI.USER_NAME
            , UI.USER_TEL, TO_CHAR(UI.USER_DATE, 'YYYY-MM-DD') "USER_DATE", UP.SSN, UP.MRG_CD
            , UP.CHILD_CD, UP.FML_CD, UP.PET_CD, UP.CAR_CD, UP.HOUSE_CD
            , ASE.AREA_FST_CD, UP.AREA_SEC_CD, JS.JOB_FST_CD, UP.JOB_SEC_CD
       FROM USER_PLUS UP
       LEFT JOIN USER_INFO UI
       ON UP.USER_DSTN_CD = UI.USER_DSTN_CD
       LEFT JOIN AREA_SEC ASE
       ON UP.AREA_SEC_CD = ASE.AREA_SEC_CD
       LEFT JOIN JOB_SEC JS
       ON UP.JOB_SEC_CD = JS.JOB_SEC_CD
       WHERE UI.USER_DSTN_CD = #{user_dstn_cd}
   </select>
   
   
   <!--  내 정보에서 활용정보 수정쿼리 -->
   <update id="plusModify">
    UPDATE USER_PLUS
    SET MRG_CD = #{mrg_cd}
       ,CHILD_CD = #{child_cd}
       ,FML_CD = #{fml_cd}
       ,HOUSE_CD = #{house_cd}
       ,PET_CD = #{pet_cd}
       ,CAR_CD = #{car_cd}
       ,AREA_SEC_CD = #{area_sec_cd}
       ,JOB_SEC_CD = #{job_sec_cd}
    WHERE USER_DSTN_CD = #{user_dstn_cd}
   </update>
   
   <!-- 수정된 내정보 확인 -->
   <select id="myInfoCheck" resultType="com.test.mvc.UserDTO" parameterType="com.test.mvc.UserDTO">
      SELECT UI.USER_TEL, UP.SSN, UP.MRG_CD
     		, UP.CHILD_CD, UP.FML_CD, UP.PET_CD, UP.CAR_CD, UP.HOUSE_CD
     		, ASE.AREA_FST_CD, UP.AREA_SEC_CD, JS.JOB_FST_CD, UP.JOB_SEC_CD
	  FROM USER_PLUS UP
	  LEFT JOIN USER_INFO UI
	  ON UP.USER_DSTN_CD = UI.USER_DSTN_CD
	  LEFT JOIN AREA_SEC ASE
	  ON UP.AREA_SEC_CD = ASE.AREA_SEC_CD
	  LEFT JOIN JOB_SEC JS
	  ON UP.JOB_SEC_CD = JS.JOB_SEC_CD
	  WHERE UI.USER_DSTN_CD = #{user_dstn_cd}
   </select>
   
   
   <!-- 비밀번호 수정쿼리 -->
   <update id="pwModify">
   	UPDATE USER_INFO
   	SET USER_PW = CRYPTPACK.ENCRYPT(#{user_pw}, '123456')
   	WHERE USER_DSTN_CD = #{user_dstn_cd}
   </update>


	<!-- 탈퇴 시 백업 테이블에 등록 쿼리 -->
    <insert id="userBackUp">
    INSERT INTO LEAVE_INFO(LEAVE_ID, USER_DSTN_CD, LEAVE_NAME, LEAVE_PW, LEAVE_TEL, USER_DATE, LEAVE_DATE)
    VALUES(LEAVE_INFO_SEQ.NEXTVAL, #{user_dstn_cd}, #{user_name}, CRYPTPACK.ENCRYPT(#{user_pw}, '123456'), #{user_tel}, #{user_date}, SYSDATE)
    </insert>
 
   
    <!-- 탈퇴 시 이용자 기본 정보 테이블에서 삭제 쿼리 -->
	<delete id="leave">
	DELETE
    FROM USER_INFO
    WHERE USER_DSTN_CD = #{user_dstn_cd}
	</delete>
	

 
	
	
	<!-- 
	<select id="fstCateList" parameterType="com.test.mvc.UserDTO" resultType="com.test.mvc.UserDTO">
		SELECT CATE_FST_CD, CATE_FST_NAME
		FROM CATE_FST
		WHERE INOUT_CD=#{inout_cd}
	</select>
	-->
	
	<!-- 
	<select id="getList" resultType="com.test.mvc.UserDTO" parameterType="String">
		SELECT CATE_FST_CD, CATE_FST_NAME
		FROM CATE_FST
		WHERE INOUT_CD=#{inout_cd}
	</select>	
	
	<select id="getName" resultType="String" parameterType="String">
	   	SELECT *
		FROM CATE_FST
		WHERE INOUT_CD=#{inout_cd}
	</select>
	-->
	 


</mapper>