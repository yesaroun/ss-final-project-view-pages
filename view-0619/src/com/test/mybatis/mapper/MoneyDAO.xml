<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.test.mvc.IMoneyDAO">
	
	<!-- 머니리뷰 페이징 - 전체 머니리뷰 개수 (신고된 게시글 제외) -->
	<select id="allPostCount" resultType="java.lang.Integer">
		SELECT COUNT(*) AS POST_COUNT
		FROM POST P
		LEFT JOIN POST_REPT R
		ON P.POST_CD = R.POST_CD
		WHERE R.POST_CD IS NULL
		ORDER BY P.POST_DATE DESC
	</select>
	
	<!-- 머니리뷰 리스트 순서 (최근글이 먼저) -->
	<select id="getPostList" resultType="com.test.mvc.MoneyDTO">
		SELECT RNUM, POST_TITLE, COUNT_CMNT, POST_DATE, POST_VIEW, POST_CD
		FROM
		(SELECT P.POST_CD, P.POST_TITLE, ROW_NUMBER() OVER(ORDER BY  P.POST_CD DESC) AS RNUM
		, (SELECT COUNT(C.CMNT_CD) FROM CMNT C LEFT JOIN CMNT_REPT CR ON C.CMNT_CD = CR.CMNT_CD
		WHERE CR.CMNT_REPT_CD IS NULL AND C.POST_CD = P.POST_CD) "COUNT_CMNT"
		, P.POST_DATE, P.POST_VIEW
		FROM POST P 
		LEFT JOIN POST_REPT RP
		ON P.POST_CD = RP.POST_CD
		WHERE RP.POST_REPT_CD IS NULL
		ORDER BY P.POST_CD DESC)
		WHERE RNUM <![CDATA[ >= ]]> #{start } AND RNUM <![CDATA[ <= ]]> #{end }
		ORDER BY RNUM
	</select>
	
	<!-- 머니리뷰 조회 - 게시물 기본 내용 -->
	<select id="postFind" resultType="com.test.mvc.MoneyDTO">
		SELECT POST_CD, USER_DSTN_CD, SUBSTR(ACNT_YM,0,4) AS YEAR, DECODE(SUBSTR(ACNT_YM,5,1),0,SUBSTR(ACNT_YM,6),1,SUBSTR(ACNT_YM,5)) AS MONTH, ACNT_YM, DTL_SELECT_CD, SUBSTR(POST_TITLE,6) AS POST_TITLE, OPINION, POST_VIEW, POST_DATE
		FROM POST
		WHERE POST_CD=#{post_cd }
	</select>
	
	
	<!-- 머니리뷰 조회 - 수입/지출 내역 불러오기 -->
	<select id="inOutList" resultType="com.test.mvc.MoneyDTO">

		SELECT  USER_DSTN_CD
			, I.INOUT_CONT "INOUT_CONT"
			, A.ACNT_DATE AS "ACNT_DATE"
			, CF.CATE_FST_NAME AS "CATE_FST_NAME"
			, CS.CATE_SEC_NAME AS "CATE_SEC_NAME"
			, A.ACNT_DTL_CONT AS "ACNT_DTL_CONT"
			, A.AMNT AS "AMNT"
		FROM ACNT A
			JOIN CATE_SEC CS
				ON A.CATE_SEC_CD = CS.CATE_SEC_CD
					JOIN CATE_FST CF
						ON CS.CATE_FST_CD = CF.CATE_FST_CD
		            		JOIN INOUT I
		              			ON CF.INOUT_CD = I.INOUT_CD
		WHERE A.USER_DSTN_CD =(SELECT USER_DSTN_CD FROM POST
			WHERE POST_CD=#{post_cd })
			AND FN_YEAR(A.ACNT_DATE)=(SELECT SUBSTR(ACNT_YM,0,4) AS YEAR FROM POST
				WHERE POST_CD=#{post_cd })
				AND FN_MON(A.ACNT_DATE)=(SELECT DECODE(SUBSTR(ACNT_YM,5,1),0,SUBSTR(ACNT_YM,6),1,SUBSTR(ACNT_YM,5)) AS MONTH FROM POST
					WHERE POST_CD=#{post_cd })
						ORDER BY ACNT_DATE
				
	</select>
	
	
	<!-- 머니리뷰 등록 -->
	<insert id = "postAdd">
		INSERT INTO POST(POST_CD, USER_DSTN_CD, ACNT_YM, POST_TITLE, DTL_SELECT_CD, OPINION, POST_DATE) 
		VALUES(POST_SEQ.NEXTVAL, #{user_dstn_cd}, #{acnt_ym }, #{post_title }, #{dtl_select_cd }, #{opinion }, SYSDATE)
	</insert>


	<!-- 머니리뷰 조회/등록폼/등록 - 마이태그 -->
	<select id="myTag" resultType="java.lang.String">
		SELECT FN_MYTAG(#{user_dstn_cd})
		 FROM USER_PLUS_VIEW
		 WHERE USER_DSTN_CD = #{user_dstn_cd}
	</select>
	
	
	<!-- ★★★★ 임시로 60이 아닌 1로 테스트 중 -->
	<!-- 지난 6개월간 작성개수가 60개 이상인 가계부 가져오기 -->
	<!-- 머니리뷰 등록폼 - 등록할 가계부 -->
	<select id="countCheck" resultType="com.test.mvc.MoneyDTO">
		SELECT TO_CHAR(ACNT_DATE, 'YYYYMM') AS ACNT_YM
		, COUNT(*) AS ACNT_COUNT
		FROM ACNT
		WHERE USER_DSTN_CD=#{user_dstn_cd}
		  AND TO_CHAR(ACNT_DATE, 'YYYYMM') >= TO_CHAR(ADD_MONTHS(SYSDATE, -6), 'YYYYMM')
		GROUP BY TO_CHAR(ACNT_DATE, 'YYYYMM')
		HAVING COUNT(*)>=1
		ORDER BY ACNT_YM DESC
	</select>
	
	
	<!-- 머니리뷰 등록폼 - 이미 등록된 게시글 체크 -->
	<select id="aleadyCheck" resultType="com.test.mvc.MoneyDTO">
		SELECT ACNT_YM AS ALEADY_YM
		FROM POST
		WHERE USER_DSTN_CD = #{user_dstn_cd}
		ORDER BY ALEADY_YM
	</select>
	
	
	<!-- 머니리뷰 방금 등록한 게시글 코드 받아오기 -->
	<select id="postCd" resultType="java.lang.Integer">
		SELECT POST_CD
		FROM POST
		WHERE ACNT_YM = #{acnt_ym} AND USER_DSTN_CD = #{user_dstn_cd}
	</select>
	
	
	<!-- 머니리뷰 수정 -->
	<update id="postUpdate">
		UPDATE POST
		SET OPINION=#{opinion }, DTL_SELECT_CD = #{dtl_select_cd }
		WHERE POST_CD=#{post_cd }
	</update>
	
	
	<!--  머니리뷰 댓글 자격 - 해당 사람이 등록한 머니리뷰 수 -->
	<select id="postCount" resultType="java.lang.Integer">
		SELECT COUNT(POST_CD) AS POST_COUNT
		FROM POST 
		WHERE USER_DSTN_CD = #{user_dstn_cd}
	</select>
	
	
	<!-- 머니리뷰 댓글 - 조회 (신고된 댓글 미포함) -->
	<select id="cmntList" resultType="com.test.mvc.MoneyDTO">
	SELECT C.CMNT_CD AS CMNT_CD, C.USER_DSTN_CD AS USER_DSTN_CD, C.CMNT_CONT AS CMNT_CONT, C.POST_CD AS POST_CD, C.CMNT_DATE AS CMNT_DATE
	FROM
	(SELECT CMNT_CD, USER_DSTN_CD, CMNT_CONT, POST_CD, CMNT_DATE
	FROM CMNT) C
	LEFT JOIN POST_REPT R
	ON C.POST_CD = R.POST_CD
	WHERE R.POST_CD IS NULL AND C.POST_CD=#{post_cd }
	ORDER BY C.CMNT_DATE DESC
	</select>
	
	
	<!-- 머니리뷰 댓글 - 등록 -->
	<insert id="cmntAdd">
		INSERT INTO CMNT(CMNT_CD, USER_DSTN_CD, POST_CD, CMNT_CONT, CMNT_DATE) 
		VALUES(CMNT_SEQ.NEXTVAL, #{user_dstn_cd}, #{post_cd}, #{cmnt_cont}, TO_DATE(SYSDATE, 'YYYY-MM-DD'))
	</insert>
	
	
	<!-- 머니리뷰 댓글 - 수정 -->
	<update id="cmntEdit">
		UPDATE CMNT
		SET CMNT_CONT = #{cmnt_cont}
		WHERE CMNT_CD = #{cmnt_cd}
	</update>
	
	
	<!-- 머니리뷰 댓글 - 삭제 -->
	<delete id="cmntDel">
		DELETE
		FROM CMNT
		WHERE CMNT_CD=#{cmnt_cd}
	</delete>
	
	
	<!-- 머니리뷰 이모티콘 - 조회 (받은 이모티콘별 개수) -->
	<select id="emtcCount" resultType="com.test.mvc.MoneyDTO">
		SELECT EMTC1, EMTC2, EMTC3, EMTC4, EMTC5
		FROM
		(SELECT COUNT(*) AS EMTC1
		FROM EMTC_REG_VIEW
		WHERE EMTC_CD=1 AND POST_CD = #{post_cd })
		,(SELECT COUNT(*) AS EMTC2
		FROM EMTC_REG_VIEW
		WHERE EMTC_CD=2 AND POST_CD = #{post_cd })
		,(SELECT COUNT(*) AS EMTC3
		FROM EMTC_REG_VIEW
		WHERE EMTC_CD=3 AND POST_CD = #{post_cd })
		,(SELECT COUNT(*) AS EMTC4
		FROM EMTC_REG_VIEW
		WHERE EMTC_CD=4 AND POST_CD = #{post_cd })
		,(SELECT COUNT(*) AS EMTC5
		FROM EMTC_REG_VIEW
		WHERE EMTC_CD=5 AND POST_CD = #{post_cd })
	</select>
	
	<!-- 머니리뷰 이모티콘 - 등록 -->
	<insert id="emtcAdd">
		INSERT INTO EMTC_REG(EMTC_REG_CD, USER_DSTN_CD, POST_CD, EMTC_CD, EMTC_REG_DATE)
		VALUES(EMTC_REG_SEQ.NEXTVAL, #{user_dstn_cd}, #{post_cd}, #{emtc_cd}, TO_DATE(SYSDATE, 'YYYY-MM-DD'))
	</insert>
	
	
	<!-- 머니리뷰 이모티콘 - 취소 -->
	<delete id="emtcDel">
		DELETE
		FROM EMTC_REG_VIEW
		WHERE POST_CD=#{post_cd} AND EMTC_WRITER=#{user_dstn_cd}
	</delete>
	
	<!-- 머니리뷰 이모티콘 - 이모티콘1 누른 사람 조회 -->
	<select id="emtc1" resultType="com.test.mvc.MoneyDTO">
		SELECT EMTC_WRITER
		FROM EMTC_REG_VIEW
		WHERE POST_CD=#{post_cd} AND EMTC_CD=1
	</select>
	
	<!-- 머니리뷰 이모티콘 - 이모티콘2 누른 사람 조회 -->
	<select id="emtc2" resultType="com.test.mvc.MoneyDTO">
		SELECT EMTC_WRITER
		FROM EMTC_REG_VIEW
		WHERE POST_CD=#{post_cd} AND EMTC_CD=2
	</select>
	
	<!-- 머니리뷰 이모티콘 - 이모티콘3 누른 사람 조회 -->
	<select id="emtc3" resultType="com.test.mvc.MoneyDTO">
		SELECT EMTC_WRITER
		FROM EMTC_REG_VIEW
		WHERE POST_CD=#{post_cd} AND EMTC_CD=3
	</select>
	
	<!-- 머니리뷰 이모티콘 - 이모티콘4 누른 사람 조회 -->
	<select id="emtc4" resultType="com.test.mvc.MoneyDTO">
		SELECT EMTC_WRITER
		FROM EMTC_REG_VIEW
		WHERE POST_CD=#{post_cd} AND EMTC_CD=4
	</select>
	
	<!-- 머니리뷰 이모티콘 - 이모티콘5 누른 사람 조회 -->
	<select id="emtc5" resultType="com.test.mvc.MoneyDTO">
		SELECT EMTC_WRITER
		FROM EMTC_REG_VIEW
		WHERE POST_CD=#{post_cd} AND EMTC_CD=5
	</select>
	
	
	<!-- 해당 게시글 수입 총합 구하기 -->
	<select id="postTotalIn" resultType="java.lang.Integer">
		SELECT NVL((SUM(A.AMNT)), 0) AS "TOTALIN"
		FROM ACNT A
		JOIN CATE_SEC CS
		ON A.CATE_SEC_CD = CS.CATE_SEC_CD
		JOIN CATE_FST CF
		ON CS.CATE_FST_CD = CF.CATE_FST_CD
		JOIN INOUT I
		ON CF.INOUT_CD = I.INOUT_CD
		WHERE A.USER_DSTN_CD =(SELECT USER_DSTN_CD
		FROM POST
		WHERE POST_CD=#{post_cd})
		AND FN_YEAR(A.ACNT_DATE)=(SELECT SUBSTR(ACNT_YM,0,4) AS YEAR
		FROM POST
		WHERE POST_CD=#{post_cd})
		AND FN_MON(A.ACNT_DATE)=(SELECT DECODE(SUBSTR(ACNT_YM,5,1),0,SUBSTR(ACNT_YM,6),1,SUBSTR(ACNT_YM,5)) AS MONTH
		FROM POST
		WHERE POST_CD=#{post_cd})
		AND INOUT_CONT='수입'
	</select>
	
	
	<!-- 해당 게시글 지출 총합 구하기 -->
	<select id="postTotalOut" resultType="java.lang.Integer">
		SELECT NVL((SUM(A.AMNT)), 0) AS "TOTALOUT"
		FROM ACNT A
		JOIN CATE_SEC CS
		ON A.CATE_SEC_CD = CS.CATE_SEC_CD
		JOIN CATE_FST CF
		ON CS.CATE_FST_CD = CF.CATE_FST_CD
		JOIN INOUT I
		ON CF.INOUT_CD = I.INOUT_CD
		WHERE A.USER_DSTN_CD =(SELECT USER_DSTN_CD
		FROM POST
		WHERE POST_CD=#{post_cd})
		AND FN_YEAR(A.ACNT_DATE)=(SELECT SUBSTR(ACNT_YM,0,4) AS YEAR
		FROM POST
		WHERE POST_CD=#{post_cd})
		AND FN_MON(A.ACNT_DATE)=(SELECT DECODE(SUBSTR(ACNT_YM,5,1),0,SUBSTR(ACNT_YM,6),1,SUBSTR(ACNT_YM,5)) AS MONTH
		FROM POST
		WHERE POST_CD=#{post_cd})
		AND INOUT_CONT='지출'
	</select>
	
	<!-- 게시글 신고 ① 게시글 번호 구하기 -->
	<select id="postReptRnum" resultType="java.lang.Integer">
		SELECT RNUM
		FROM
		(SELECT P.POST_CD, P.POST_TITLE, ROW_NUMBER() OVER(ORDER BY  P.POST_CD DESC) AS RNUM
		, (SELECT COUNT(C.CMNT_CD) FROM CMNT C LEFT JOIN CMNT_REPT CR ON C.CMNT_CD = CR.CMNT_CD
		WHERE CR.CMNT_REPT_CD IS NULL AND C.POST_CD = P.POST_CD) "COUNT_CMNT"
		, P.POST_DATE, P.POST_VIEW
		FROM POST P 
		LEFT JOIN POST_REPT RP
		ON P.POST_CD = RP.POST_CD
		WHERE RP.POST_REPT_CD IS NULL
		ORDER BY P.POST_CD DESC)
	    WHERE POST_CD=#{post_cd}
	</select>
	
	<!-- 게시글 신고 ② 글 작성자 구하기 -->
	<select id="postReptUser" resultType="java.lang.String">
		SELECT USER_DSTN_CD
		FROM POST
		WHERE POST_CD=#{post_cd }
	</select>
	
	<!-- 나중에 얘 어떻게 더 깔끔하게 해버리기 ^_^ -->
	<!-- 머니리뷰 통계용 데이터 -->
	<!-- 머니리뷰코드(POST_CD)로 수입총합, 지출총합, 카테고리별 총합들(19개) 가져오기 ...  -->
	<select id="inOutData" resultType="com.test.mvc.MoneyDTO">
		SELECT CATE_FST_1, CATE_FST_2, CATE_FST_3, CATE_FST_4, CATE_FST_5, CATE_FST_6,
		CATE_FST_7, CATE_FST_8, CATE_FST_9, CATE_FST_10, CATE_FST_11, CATE_FST_12,
		CATE_FST_13, CATE_FST_14, CATE_FST_15, CATE_FST_16, CATE_FST_17, CATE_FST_18, CATE_FST_19
		FROM
		(SELECT NVL(SUM(A.AMNT),0) AS "CATE_FST_1"
		FROM ACNT A
		JOIN CATE_SEC CS
		ON A.CATE_SEC_CD = CS.CATE_SEC_CD
		JOIN CATE_FST CF
		ON CS.CATE_FST_CD = CF.CATE_FST_CD
		JOIN INOUT I
		ON CF.INOUT_CD = I.INOUT_CD
		WHERE A.USER_DSTN_CD =(SELECT USER_DSTN_CD
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_YEAR(A.ACNT_DATE)=(SELECT SUBSTR(ACNT_YM,0,4) AS YEAR
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_MON(A.ACNT_DATE)=(SELECT DECODE(SUBSTR(ACNT_YM,5,1),0,SUBSTR(ACNT_YM,6),1,SUBSTR(ACNT_YM,5)) AS MONTH
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND CF.CATE_FST_CD=1),
		(SELECT NVL(SUM(A.AMNT),0) AS "CATE_FST_2"
		FROM ACNT A
		JOIN CATE_SEC CS
		ON A.CATE_SEC_CD = CS.CATE_SEC_CD
		JOIN CATE_FST CF
		ON CS.CATE_FST_CD = CF.CATE_FST_CD
		JOIN INOUT I
		ON CF.INOUT_CD = I.INOUT_CD
		WHERE A.USER_DSTN_CD =(SELECT USER_DSTN_CD
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_YEAR(A.ACNT_DATE)=(SELECT SUBSTR(ACNT_YM,0,4) AS YEAR
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_MON(A.ACNT_DATE)=(SELECT DECODE(SUBSTR(ACNT_YM,5,1),0,SUBSTR(ACNT_YM,6),1,SUBSTR(ACNT_YM,5)) AS MONTH
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND CF.CATE_FST_CD=2),
		(SELECT NVL(SUM(A.AMNT),0) AS "CATE_FST_3"
		FROM ACNT A
		JOIN CATE_SEC CS
		ON A.CATE_SEC_CD = CS.CATE_SEC_CD
		JOIN CATE_FST CF
		ON CS.CATE_FST_CD = CF.CATE_FST_CD
		JOIN INOUT I
		ON CF.INOUT_CD = I.INOUT_CD
		WHERE A.USER_DSTN_CD =(SELECT USER_DSTN_CD
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_YEAR(A.ACNT_DATE)=(SELECT SUBSTR(ACNT_YM,0,4) AS YEAR
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_MON(A.ACNT_DATE)=(SELECT DECODE(SUBSTR(ACNT_YM,5,1),0,SUBSTR(ACNT_YM,6),1,SUBSTR(ACNT_YM,5)) AS MONTH
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND CF.CATE_FST_CD=3),
		(SELECT NVL(SUM(A.AMNT),0) AS "CATE_FST_4"
		FROM ACNT A
		JOIN CATE_SEC CS
		ON A.CATE_SEC_CD = CS.CATE_SEC_CD
		JOIN CATE_FST CF
		ON CS.CATE_FST_CD = CF.CATE_FST_CD
		JOIN INOUT I
		ON CF.INOUT_CD = I.INOUT_CD
		WHERE A.USER_DSTN_CD =(SELECT USER_DSTN_CD
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_YEAR(A.ACNT_DATE)=(SELECT SUBSTR(ACNT_YM,0,4) AS YEAR
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_MON(A.ACNT_DATE)=(SELECT DECODE(SUBSTR(ACNT_YM,5,1),0,SUBSTR(ACNT_YM,6),1,SUBSTR(ACNT_YM,5)) AS MONTH
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND CF.CATE_FST_CD=4),
		(SELECT NVL(SUM(A.AMNT),0) AS "CATE_FST_5"
		FROM ACNT A
		JOIN CATE_SEC CS
		ON A.CATE_SEC_CD = CS.CATE_SEC_CD
		JOIN CATE_FST CF
		ON CS.CATE_FST_CD = CF.CATE_FST_CD
		JOIN INOUT I
		ON CF.INOUT_CD = I.INOUT_CD
		WHERE A.USER_DSTN_CD =(SELECT USER_DSTN_CD
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_YEAR(A.ACNT_DATE)=(SELECT SUBSTR(ACNT_YM,0,4) AS YEAR
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_MON(A.ACNT_DATE)=(SELECT DECODE(SUBSTR(ACNT_YM,5,1),0,SUBSTR(ACNT_YM,6),1,SUBSTR(ACNT_YM,5)) AS MONTH
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND CF.CATE_FST_CD=5),
		(SELECT NVL(SUM(A.AMNT),0) AS "CATE_FST_6"
		FROM ACNT A
		JOIN CATE_SEC CS
		ON A.CATE_SEC_CD = CS.CATE_SEC_CD
		JOIN CATE_FST CF
		ON CS.CATE_FST_CD = CF.CATE_FST_CD
		JOIN INOUT I
		ON CF.INOUT_CD = I.INOUT_CD
		WHERE A.USER_DSTN_CD =(SELECT USER_DSTN_CD
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_YEAR(A.ACNT_DATE)=(SELECT SUBSTR(ACNT_YM,0,4) AS YEAR
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_MON(A.ACNT_DATE)=(SELECT DECODE(SUBSTR(ACNT_YM,5,1),0,SUBSTR(ACNT_YM,6),1,SUBSTR(ACNT_YM,5)) AS MONTH
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND CF.CATE_FST_CD=6),
		(SELECT NVL(SUM(A.AMNT),0) AS "CATE_FST_7"
		FROM ACNT A
		JOIN CATE_SEC CS
		ON A.CATE_SEC_CD = CS.CATE_SEC_CD
		JOIN CATE_FST CF
		ON CS.CATE_FST_CD = CF.CATE_FST_CD
		JOIN INOUT I
		ON CF.INOUT_CD = I.INOUT_CD
		WHERE A.USER_DSTN_CD =(SELECT USER_DSTN_CD
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_YEAR(A.ACNT_DATE)=(SELECT SUBSTR(ACNT_YM,0,4) AS YEAR
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_MON(A.ACNT_DATE)=(SELECT DECODE(SUBSTR(ACNT_YM,5,1),0,SUBSTR(ACNT_YM,6),1,SUBSTR(ACNT_YM,5)) AS MONTH
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND CF.CATE_FST_CD=7),
		(SELECT NVL(SUM(A.AMNT),0) AS "CATE_FST_8"
		FROM ACNT A
		JOIN CATE_SEC CS
		ON A.CATE_SEC_CD = CS.CATE_SEC_CD
		JOIN CATE_FST CF
		ON CS.CATE_FST_CD = CF.CATE_FST_CD
		JOIN INOUT I
		ON CF.INOUT_CD = I.INOUT_CD
		WHERE A.USER_DSTN_CD =(SELECT USER_DSTN_CD
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_YEAR(A.ACNT_DATE)=(SELECT SUBSTR(ACNT_YM,0,4) AS YEAR
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_MON(A.ACNT_DATE)=(SELECT DECODE(SUBSTR(ACNT_YM,5,1),0,SUBSTR(ACNT_YM,6),1,SUBSTR(ACNT_YM,5)) AS MONTH
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND CF.CATE_FST_CD=8),
		(SELECT NVL(SUM(A.AMNT),0) AS "CATE_FST_9"
		FROM ACNT A
		JOIN CATE_SEC CS
		ON A.CATE_SEC_CD = CS.CATE_SEC_CD
		JOIN CATE_FST CF
		ON CS.CATE_FST_CD = CF.CATE_FST_CD
		JOIN INOUT I
		ON CF.INOUT_CD = I.INOUT_CD
		WHERE A.USER_DSTN_CD =(SELECT USER_DSTN_CD
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_YEAR(A.ACNT_DATE)=(SELECT SUBSTR(ACNT_YM,0,4) AS YEAR
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_MON(A.ACNT_DATE)=(SELECT DECODE(SUBSTR(ACNT_YM,5,1),0,SUBSTR(ACNT_YM,6),1,SUBSTR(ACNT_YM,5)) AS MONTH
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND CF.CATE_FST_CD=9),
		(SELECT NVL(SUM(A.AMNT),0) AS "CATE_FST_10"
		FROM ACNT A
		JOIN CATE_SEC CS
		ON A.CATE_SEC_CD = CS.CATE_SEC_CD
		JOIN CATE_FST CF
		ON CS.CATE_FST_CD = CF.CATE_FST_CD
		JOIN INOUT I
		ON CF.INOUT_CD = I.INOUT_CD
		WHERE A.USER_DSTN_CD =(SELECT USER_DSTN_CD
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_YEAR(A.ACNT_DATE)=(SELECT SUBSTR(ACNT_YM,0,4) AS YEAR
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_MON(A.ACNT_DATE)=(SELECT DECODE(SUBSTR(ACNT_YM,5,1),0,SUBSTR(ACNT_YM,6),1,SUBSTR(ACNT_YM,5)) AS MONTH
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND CF.CATE_FST_CD=10),
		(SELECT NVL(SUM(A.AMNT),0) AS "CATE_FST_11"
		FROM ACNT A
		JOIN CATE_SEC CS
		ON A.CATE_SEC_CD = CS.CATE_SEC_CD
		JOIN CATE_FST CF
		ON CS.CATE_FST_CD = CF.CATE_FST_CD
		JOIN INOUT I
		ON CF.INOUT_CD = I.INOUT_CD
		WHERE A.USER_DSTN_CD =(SELECT USER_DSTN_CD
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_YEAR(A.ACNT_DATE)=(SELECT SUBSTR(ACNT_YM,0,4) AS YEAR
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_MON(A.ACNT_DATE)=(SELECT DECODE(SUBSTR(ACNT_YM,5,1),0,SUBSTR(ACNT_YM,6),1,SUBSTR(ACNT_YM,5)) AS MONTH
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND CF.CATE_FST_CD=11),
		(SELECT NVL(SUM(A.AMNT),0) AS "CATE_FST_12"
		FROM ACNT A
		JOIN CATE_SEC CS
		ON A.CATE_SEC_CD = CS.CATE_SEC_CD
		JOIN CATE_FST CF
		ON CS.CATE_FST_CD = CF.CATE_FST_CD
		JOIN INOUT I
		ON CF.INOUT_CD = I.INOUT_CD
		WHERE A.USER_DSTN_CD =(SELECT USER_DSTN_CD
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_YEAR(A.ACNT_DATE)=(SELECT SUBSTR(ACNT_YM,0,4) AS YEAR
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_MON(A.ACNT_DATE)=(SELECT DECODE(SUBSTR(ACNT_YM,5,1),0,SUBSTR(ACNT_YM,6),1,SUBSTR(ACNT_YM,5)) AS MONTH
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND CF.CATE_FST_CD=12),
		(SELECT NVL(SUM(A.AMNT),0) AS "CATE_FST_13"
		FROM ACNT A
		JOIN CATE_SEC CS
		ON A.CATE_SEC_CD = CS.CATE_SEC_CD
		JOIN CATE_FST CF
		ON CS.CATE_FST_CD = CF.CATE_FST_CD
		JOIN INOUT I
		ON CF.INOUT_CD = I.INOUT_CD
		WHERE A.USER_DSTN_CD =(SELECT USER_DSTN_CD
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_YEAR(A.ACNT_DATE)=(SELECT SUBSTR(ACNT_YM,0,4) AS YEAR
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_MON(A.ACNT_DATE)=(SELECT DECODE(SUBSTR(ACNT_YM,5,1),0,SUBSTR(ACNT_YM,6),1,SUBSTR(ACNT_YM,5)) AS MONTH
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND CF.CATE_FST_CD=13),
		(SELECT NVL(SUM(A.AMNT),0) AS "CATE_FST_14"
		FROM ACNT A
		JOIN CATE_SEC CS
		ON A.CATE_SEC_CD = CS.CATE_SEC_CD
		JOIN CATE_FST CF
		ON CS.CATE_FST_CD = CF.CATE_FST_CD
		JOIN INOUT I
		ON CF.INOUT_CD = I.INOUT_CD
		WHERE A.USER_DSTN_CD =(SELECT USER_DSTN_CD
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_YEAR(A.ACNT_DATE)=(SELECT SUBSTR(ACNT_YM,0,4) AS YEAR
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_MON(A.ACNT_DATE)=(SELECT DECODE(SUBSTR(ACNT_YM,5,1),0,SUBSTR(ACNT_YM,6),1,SUBSTR(ACNT_YM,5)) AS MONTH
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND CF.CATE_FST_CD=14),
		(SELECT NVL(SUM(A.AMNT),0) AS "CATE_FST_15"
		FROM ACNT A
		JOIN CATE_SEC CS
		ON A.CATE_SEC_CD = CS.CATE_SEC_CD
		JOIN CATE_FST CF
		ON CS.CATE_FST_CD = CF.CATE_FST_CD
		JOIN INOUT I
		ON CF.INOUT_CD = I.INOUT_CD
		WHERE A.USER_DSTN_CD =(SELECT USER_DSTN_CD
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_YEAR(A.ACNT_DATE)=(SELECT SUBSTR(ACNT_YM,0,4) AS YEAR
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_MON(A.ACNT_DATE)=(SELECT DECODE(SUBSTR(ACNT_YM,5,1),0,SUBSTR(ACNT_YM,6),1,SUBSTR(ACNT_YM,5)) AS MONTH
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND CF.CATE_FST_CD=15),
		(SELECT NVL(SUM(A.AMNT),0) AS "CATE_FST_16"
		FROM ACNT A
		JOIN CATE_SEC CS
		ON A.CATE_SEC_CD = CS.CATE_SEC_CD
		JOIN CATE_FST CF
		ON CS.CATE_FST_CD = CF.CATE_FST_CD
		JOIN INOUT I
		ON CF.INOUT_CD = I.INOUT_CD
		WHERE A.USER_DSTN_CD =(SELECT USER_DSTN_CD
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_YEAR(A.ACNT_DATE)=(SELECT SUBSTR(ACNT_YM,0,4) AS YEAR
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_MON(A.ACNT_DATE)=(SELECT DECODE(SUBSTR(ACNT_YM,5,1),0,SUBSTR(ACNT_YM,6),1,SUBSTR(ACNT_YM,5)) AS MONTH
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND CF.CATE_FST_CD=16),
		(SELECT NVL(SUM(A.AMNT),0) AS "CATE_FST_17"
		FROM ACNT A
		JOIN CATE_SEC CS
		ON A.CATE_SEC_CD = CS.CATE_SEC_CD
		JOIN CATE_FST CF
		ON CS.CATE_FST_CD = CF.CATE_FST_CD
		JOIN INOUT I
		ON CF.INOUT_CD = I.INOUT_CD
		WHERE A.USER_DSTN_CD =(SELECT USER_DSTN_CD
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_YEAR(A.ACNT_DATE)=(SELECT SUBSTR(ACNT_YM,0,4) AS YEAR
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_MON(A.ACNT_DATE)=(SELECT DECODE(SUBSTR(ACNT_YM,5,1),0,SUBSTR(ACNT_YM,6),1,SUBSTR(ACNT_YM,5)) AS MONTH
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND CF.CATE_FST_CD=17),
		(SELECT NVL(SUM(A.AMNT),0) AS "CATE_FST_18"
		FROM ACNT A
		JOIN CATE_SEC CS
		ON A.CATE_SEC_CD = CS.CATE_SEC_CD
		JOIN CATE_FST CF
		ON CS.CATE_FST_CD = CF.CATE_FST_CD
		JOIN INOUT I
		ON CF.INOUT_CD = I.INOUT_CD
		WHERE A.USER_DSTN_CD =(SELECT USER_DSTN_CD
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_YEAR(A.ACNT_DATE)=(SELECT SUBSTR(ACNT_YM,0,4) AS YEAR
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_MON(A.ACNT_DATE)=(SELECT DECODE(SUBSTR(ACNT_YM,5,1),0,SUBSTR(ACNT_YM,6),1,SUBSTR(ACNT_YM,5)) AS MONTH
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND CF.CATE_FST_CD=18),
		(SELECT NVL(SUM(A.AMNT),0) AS "CATE_FST_19"
		FROM ACNT A
		JOIN CATE_SEC CS
		ON A.CATE_SEC_CD = CS.CATE_SEC_CD
		JOIN CATE_FST CF
		ON CS.CATE_FST_CD = CF.CATE_FST_CD
		JOIN INOUT I
		ON CF.INOUT_CD = I.INOUT_CD
		WHERE A.USER_DSTN_CD =(SELECT USER_DSTN_CD
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_YEAR(A.ACNT_DATE)=(SELECT SUBSTR(ACNT_YM,0,4) AS YEAR
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_MON(A.ACNT_DATE)=(SELECT DECODE(SUBSTR(ACNT_YM,5,1),0,SUBSTR(ACNT_YM,6),1,SUBSTR(ACNT_YM,5)) AS MONTH
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND CF.CATE_FST_CD=19),
		(SELECT TOTALIN, TOTALOUT
		FROM
		(SELECT SUM(A.AMNT) AS "TOTALIN"
		FROM ACNT A
		JOIN CATE_SEC CS
		ON A.CATE_SEC_CD = CS.CATE_SEC_CD
		JOIN CATE_FST CF
		ON CS.CATE_FST_CD = CF.CATE_FST_CD
		JOIN INOUT I
		ON CF.INOUT_CD = I.INOUT_CD
		WHERE A.USER_DSTN_CD =(SELECT USER_DSTN_CD
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_YEAR(A.ACNT_DATE)=(SELECT SUBSTR(ACNT_YM,0,4) AS YEAR
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_MON(A.ACNT_DATE)=(SELECT DECODE(SUBSTR(ACNT_YM,5,1),0,SUBSTR(ACNT_YM,6),1,SUBSTR(ACNT_YM,5)) AS MONTH
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND INOUT_CONT='수입'),
		(SELECT SUM(A.AMNT) AS "TOTALOUT"
		FROM ACNT A
		JOIN CATE_SEC CS
		ON A.CATE_SEC_CD = CS.CATE_SEC_CD
		JOIN CATE_FST CF
		ON CS.CATE_FST_CD = CF.CATE_FST_CD
		JOIN INOUT I
		ON CF.INOUT_CD = I.INOUT_CD
		WHERE A.USER_DSTN_CD =(SELECT USER_DSTN_CD
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_YEAR(A.ACNT_DATE)=(SELECT SUBSTR(ACNT_YM,0,4) AS YEAR
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND FN_MON(A.ACNT_DATE)=(SELECT DECODE(SUBSTR(ACNT_YM,5,1),0,SUBSTR(ACNT_YM,6),1,SUBSTR(ACNT_YM,5)) AS MONTH
		FROM POST
		WHERE POST_CD=#{post_cd })
		AND INOUT_CONT='지출'))
	</select>
	
</mapper>